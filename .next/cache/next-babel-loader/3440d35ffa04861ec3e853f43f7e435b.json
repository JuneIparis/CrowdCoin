{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Accordion } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport seller from \"../../ethereum/Seller\";\nimport web3 from \"../../ethereum/web3\";\n\nvar newResgistration =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(newResgistration, _Component);\n\n  function newResgistration() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, newResgistration);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(newResgistration)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      description: \"\",\n      email: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSumbit\", function _callee(event) {\n      var registered, accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(seller.methods.isRegistered().call());\n\n            case 3:\n              registered = _context.sent;\n              console.log(registered);\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(seller.methods.register(_this.state.email, _this.state.description).send({\n                from: accounts[0]\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(newResgistration, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Form, {\n        onSubmit: this.onSumbit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        primary: true\n      }, \"Submit\")));\n    }\n  }]);\n\n  return newResgistration;\n}(Component);\n\nexport default newResgistration;","map":{"version":3,"sources":["/mnt/d/kickstart/pages/seller/new.js"],"names":["React","Component","Form","Button","Input","Accordion","Layout","seller","web3","newResgistration","description","email","event","preventDefault","methods","isRegistered","call","registered","console","log","eth","getAccounts","accounts","register","state","send","from","onSumbit","setState","target","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA+C,mBAA/C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;IAEMC,gB;;;;;;;;;;;;;;;;;;4DACI;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,K;;+DAEG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,cAAAA,KAAK,CAACC,cAAN;AADS;AAAA,+CAEgBN,MAAM,CAACO,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,EAFhB;;AAAA;AAEHC,cAAAA,UAFG;AAGTC,cAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAHS;AAAA,+CAIcT,IAAI,CAACY,GAAL,CAASC,WAAT,EAJd;;AAAA;AAIHC,cAAAA,QAJG;AAAA;AAAA,+CAKHf,MAAM,CAACO,OAAP,CACHS,QADG,CACM,MAAKC,KAAL,CAAWb,KADjB,EACwB,MAAKa,KAAL,CAAWd,WADnC,EAEHe,IAFG,CAEE;AAAEC,gBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD;AAAhB,eAFF,CALG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BASF;AAAA;;AACP,aACE,MAAC,MAAD,QACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKK;AAArB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,mCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWd,WADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,iBACb,MAAI,CAACgB,QAAL,CAAc;AAAElB,YAAAA,WAAW,EAAEE,KAAK,CAACiB,MAAN,CAAaC;AAA5B,WAAd,CADa;AAAA;AAFjB,QAFF,CADF,EAUE,MAAC,IAAD,CAAM,KAAN,QACE,6BADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWb,KADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAI,MAAI,CAACgB,QAAL,CAAc;AAAEjB,YAAAA,KAAK,EAAEC,KAAK,CAACiB,MAAN,CAAaC;AAAtB,WAAd,CAAJ;AAAA;AAFjB,QAFF,CAVF,EAiBE,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,kBAjBF,CADF,CADF;AAuBD;;;;EApC4B7B,S;;AAuC/B,eAAeQ,gBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button, Input, Accordion } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport seller from \"../../ethereum/Seller\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nclass newResgistration extends Component {\r\n  state = { description: \"\", email: \"\" };\r\n\r\n  onSumbit = async event => {\r\n    event.preventDefault();\r\n    const registered = await seller.methods.isRegistered().call();\r\n    console.log(registered);\r\n    const accounts = await web3.eth.getAccounts();\r\n    await seller.methods\r\n      .register(this.state.email, this.state.description)\r\n      .send({ from: accounts[0] });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Form onSubmit={this.onSumbit}>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <Input\r\n              value={this.state.description}\r\n              onChange={event =>\r\n                this.setState({ description: event.target.value })\r\n              }\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Email</label>\r\n            <Input\r\n              value={this.state.email}\r\n              onChange={event => this.setState({ email: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Button primary>Submit</Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default newResgistration;\r\n"]},"metadata":{},"sourceType":"module"}