{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Accordion } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport seller from \"../../ethereum/Seller\";\nimport web3 from \"../../ethereum/web3\";\n\nclass newResgistration extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      description: \"\",\n      email: \"\"\n    });\n\n    _defineProperty(this, \"onSumbit\", async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      await seller.methods.register(this.state.email, this.state.description).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Form, {\n      onSubmit: this.onSumbit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n      value: this.state.description,\n      onChange: event => this.setState({\n        description: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      })\n    })), __jsx(Button, {\n      primary: true\n    }, \"Submit\")));\n  }\n\n}\n\nexport default newResgistration;","map":{"version":3,"sources":["/mnt/d/kickstart/pages/seller/new.js"],"names":["React","Component","Form","Button","Input","Accordion","Layout","seller","web3","newResgistration","description","email","event","preventDefault","accounts","eth","getAccounts","console","log","methods","register","state","send","from","render","onSumbit","setState","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA+C,mBAA/C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AAAA;AAAA;;AAAA,mCAC/B;AAAES,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAD+B;;AAAA,sCAG5B,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,YAAMP,MAAM,CAACY,OAAP,CACHC,QADG,CACM,KAAKC,KAAL,CAAWV,KADjB,EACwB,KAAKU,KAAL,CAAWX,WADnC,EAEHY,IAFG,CAEE;AAAEC,QAAAA,IAAI,EAAET,QAAQ,CAAC,CAAD;AAAhB,OAFF,CAAN;AAGD,KAVsC;AAAA;;AAWvCU,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,mCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWX,WADpB;AAEE,MAAA,QAAQ,EAAEE,KAAK,IACb,KAAKc,QAAL,CAAc;AAAEhB,QAAAA,WAAW,EAAEE,KAAK,CAACe,MAAN,CAAaC;AAA5B,OAAd;AAHJ,MAFF,CADF,EAUE,MAAC,IAAD,CAAM,KAAN,QACE,6BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWV,KADpB;AAEE,MAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAEf,QAAAA,KAAK,EAAEC,KAAK,CAACe,MAAN,CAAaC;AAAtB,OAAd;AAFrB,MAFF,CAVF,EAiBE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,gBAjBF,CADF,CADF;AAuBD;;AAnCsC;;AAsCzC,eAAenB,gBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button, Input, Accordion } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport seller from \"../../ethereum/Seller\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nclass newResgistration extends Component {\r\n  state = { description: \"\", email: \"\" };\r\n\r\n  onSumbit = async event => {\r\n    event.preventDefault();\r\n    const accounts = await web3.eth.getAccounts();\r\n    console.log(accounts);\r\n    await seller.methods\r\n      .register(this.state.email, this.state.description)\r\n      .send({ from: accounts[0] });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Form onSubmit={this.onSumbit}>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <Input\r\n              value={this.state.description}\r\n              onChange={event =>\r\n                this.setState({ description: event.target.value })\r\n              }\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Email</label>\r\n            <Input\r\n              value={this.state.email}\r\n              onChange={event => this.setState({ email: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Button primary>Submit</Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default newResgistration;\r\n"]},"metadata":{},"sourceType":"module"}