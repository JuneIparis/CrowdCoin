{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Message } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign.js\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes.js\";\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      this.setState({\n        loading: true\n      });\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        value: \"\"\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"amount to contibute\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      label: \"ether\",\n      labelPosition: \"right\"\n    })), __jsx(Button, {\n      type: \"submit\",\n      primary: true\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/mnt/d/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Button","Message","Campaign","web3","Router","ContributeForm","value","errorMessage","loading","event","setState","preventDefault","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AACA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNS,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAD6B;;AAAA,sCAM1B,MAAMC,KAAN,IAAe;AACxB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAC,MAAAA,KAAK,CAACE,cAAN;AACA,YAAMC,QAAQ,GAAGV,QAAQ,CAAC,KAAKW,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADyB;AAEvCT,UAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAmC,OAAnC;AAFgC,SAAnC,CAAN;AAIAF,QAAAA,MAAM,CAACqB,YAAP,CAAqB,cAAa,KAAKZ,KAAL,CAAWC,OAAQ,EAArD;AACD,OAPD,CAOE,OAAOY,GAAP,EAAY;AACZ,aAAKhB,QAAL,CAAc;AAAEH,UAAAA,YAAY,EAAEmB,GAAG,CAACC;AAApB,SAAd;AACD;;AACD,WAAKjB,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,KAAK,EAAE;AAAzB,OAAd;AACD,KAtBoC;AAAA;;AAuBrCsB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,2CADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWlB,KADpB;AAEE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaxB;AAAtB,OAAd,CAFrB;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,aAAa,EAAC;AAJhB,MAFF,CADF,EAWE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO;AAA7B,qBAXF,CADF;AAiBD;;AAzCoC;;AA4CvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Message } from \"semantic-ui-react\";\r\nimport Campaign from \"../ethereum/campaign.js\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Router } from \"../routes.js\";\r\nclass ContributeForm extends Component {\r\n  state = {\r\n    value: \"\",\r\n    errorMessage: \"\",\r\n    loading: false\r\n  };\r\n  onSubmit = async event => {\r\n    this.setState({ loading: true });\r\n    event.preventDefault();\r\n    const campaign = Campaign(this.props.address);\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await campaign.methods.contribute().send({\r\n        from: accounts[0],\r\n        value: web3.utils.toWei(this.state.value, \"ether\")\r\n      });\r\n      Router.replaceRoute(`/campaigns/${this.props.address}`);\r\n    } catch (err) {\r\n      this.setState({ errorMessage: err.message });\r\n    }\r\n    this.setState({ loading: false, value: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Field>\r\n          <label>amount to contibute</label>\r\n          <Input\r\n            value={this.state.value}\r\n            onChange={event => this.setState({ value: event.target.value })}\r\n            label=\"ether\"\r\n            labelPosition=\"right\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Button type=\"submit\" primary>\r\n          Contribute!\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContributeForm;\r\n"]},"metadata":{},"sourceType":"module"}